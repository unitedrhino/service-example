syntax = "v1"

@server (
	group:            things/device/info
	prefix:           /api/v1/things/device/info
	accessCodePrefix: "thingsDeviceInfo" //生成授权code的前缀,如果不填写则会使用group 生成小驼峰
	accessNamePrefix: "设备信息" // 授权名称的前缀
	accessGroup:      "设备管理" //授权组,如果没有这个字段,不会生成授权信息
	defaultNeedAuth:  "false" //授权默认参数 是否需要授权,不填为false
	defaultAuthType:  "all" //授权默认参数 默认授权的角色 1(all) 全部人可以操作 2(admin) 默认授予租户管理员权限 3(superAdmin,supper) default租户才可以操作(超管是跨租户的)
	middleware:       CheckTokenWare,InitCtxsWare
)
service lightsvr {
	@doc (
		summary:    "新增设备" //接口的描述
		isNeedAuth: "true" //是否需要权限认证
		authType:   "admin" //默认只授权给管理员
	)
	@handler create
	post /create

	@doc (
		summary: "更新设备" //不填为默认值,
	)
	@handler update
	post /update

	@doc (
		summary:    "删除设备"
		isNeedAuth: "true"
		authType:   "admin"
	)
	@handler delete
	post /delete

	@doc (
		summary:      "设备控制"
		businessType: "control" // 默认代码生成会将  结尾为修改为对应的操作类型组装到授权code中,如果需要特殊的则可以自定义 默认的如下 add:("create", "multi-create", "import") "modify":("update", "multi-update","send")  "delete":("delete", "multi-delete") find:("index", "read", "count", "tree") 没有匹配到的则为other
	)
	@handler control
	post /control
}

